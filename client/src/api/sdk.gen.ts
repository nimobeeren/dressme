// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type OptionsLegacyParser, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetUsersError, GetUsersResponse, GetAvatarImageData, GetAvatarImageError, GetAvatarImageResponse, GetWearablesError, GetWearablesResponse, CreateWearableData, CreateWearableError, CreateWearableResponse, GetWearableImageData, GetWearableImageError, GetWearableImageResponse, GetOutfitData, GetOutfitError, GetOutfitResponse, GetOutfitsError, GetOutfitsResponse, CreateOutfitData, CreateOutfitError, CreateOutfitResponse, DeleteOutfitData, DeleteOutfitError, DeleteOutfitResponse } from './types.gen';

export const client = createClient(createConfig({
    throwOnError: true
}));

/**
 * Get Users
 */
export const getUsers = <ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUsersResponse, GetUsersError, ThrowOnError>({
        ...options,
        url: '/users'
    });
};

/**
 * Get Avatar Image
 */
export const getAvatarImage = <ThrowOnError extends boolean = true>(options: OptionsLegacyParser<GetAvatarImageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetAvatarImageResponse, GetAvatarImageError, ThrowOnError>({
        ...options,
        url: '/images/avatars/{avatar_image_id}'
    });
};

/**
 * Get Wearables
 */
export const getWearables = <ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetWearablesResponse, GetWearablesError, ThrowOnError>({
        ...options,
        url: '/wearables'
    });
};

/**
 * Create Wearable
 */
export const createWearable = <ThrowOnError extends boolean = true>(options: OptionsLegacyParser<CreateWearableData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateWearableResponse, CreateWearableError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/wearables'
    });
};

/**
 * Get Wearable Image
 */
export const getWearableImage = <ThrowOnError extends boolean = true>(options: OptionsLegacyParser<GetWearableImageData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetWearableImageResponse, GetWearableImageError, ThrowOnError>({
        ...options,
        url: '/images/wearables/{wearable_image_id}'
    });
};

/**
 * Get Outfit
 */
export const getOutfit = <ThrowOnError extends boolean = true>(options: OptionsLegacyParser<GetOutfitData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetOutfitResponse, GetOutfitError, ThrowOnError>({
        ...options,
        url: '/images/outfit'
    });
};

/**
 * Get Outfits
 */
export const getOutfits = <ThrowOnError extends boolean = true>(options?: OptionsLegacyParser<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetOutfitsResponse, GetOutfitsError, ThrowOnError>({
        ...options,
        url: '/outfits'
    });
};

/**
 * Create Outfit
 */
export const createOutfit = <ThrowOnError extends boolean = true>(options: OptionsLegacyParser<CreateOutfitData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateOutfitResponse, CreateOutfitError, ThrowOnError>({
        ...options,
        url: '/outfits'
    });
};

/**
 * Delete Outfit
 */
export const deleteOutfit = <ThrowOnError extends boolean = true>(options: OptionsLegacyParser<DeleteOutfitData, ThrowOnError>) => {
    return (options?.client ?? client).delete<DeleteOutfitResponse, DeleteOutfitError, ThrowOnError>({
        ...options,
        url: '/outfits'
    });
};